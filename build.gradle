plugins {
    id "java"
    id "eclipse"
    id "idea"
    id "jaci.openrio.gradle.GradleRIO" version "2017.10.30"
    id "io.spring.dependency-management" version "1.0.1.RELEASE"
}

dependencyManagement {
    imports {
        mavenBom "org.apache.logging.log4j:log4j-bom:2.10.0"
    }
}

repositories {
    mavenCentral()
}

def TEAM = 1701
def ROBOT_CLASS = "org.usfirst.frc.team1701.robot.Robot"

// Define my targets (RoboRIO) and artifacts (deployable files)
// This is added by GradleRIO"s backing project EmbeddedTools.
deploy {
    targets {
        target("roborio", jaci.openrio.gradle.frc.RoboRIO) {
            team = TEAM
        }
    }
    artifacts {
        artifact("frcJava", jaci.openrio.gradle.frc.FRCJavaArtifact) {
            targets << "roborio"
        }
    }
}

// Defining my dependencies. In this case, WPILib, CTRE, NavX, GSON, and ZeroMQ.
dependencies {
    compile wpilib()
    compile ctre()
    compile navx()
    compile group: "com.google.code.gson", name: "gson", version: "2.8.2"
    compile group: "org.zeromq", name: "jzmq", version: "2.1.0"
    compile "org.apache.logging.log4j:log4j-api"
    compile "org.apache.logging.log4j:log4j-core"
}

// Setting up my Jar File. In this case, adding all libraries into the main jar (fat jar)
// in order to make them all available at runtime. Also adding the manifest so WPILib
// knows where to look for our Robot Class.
jar {
    from configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
    manifest jaci.openrio.gradle.GradleRIOPlugin.javaManifest(ROBOT_CLASS)
}

task wrapper(type: Wrapper) {
    gradleVersion = "4.2.1"
}
